============================================
core/checker/declaration_0
============================================

// Simple checker containing concurrent assertions
checker my_check1 (logic test_sig, event clock);
    default clocking @clock; endclocking
    property p(logic sig);
        // ...
        a |-> b;
    endproperty
    a1: assert property (p (test_sig));
    c1: cover property (!test_sig ##1 test_sig);
endchecker : my_check1

----

(source_file
  (comment)
  (package_or_generate_item_declaration
    (checker_declaration
      name: (simple_identifier)
      (checker_port_list
        (checker_port_item
          (property_formal_type1
            (sequence_formal_type1
              (data_type_or_implicit1
                (data_type
                  (integer_vector_type)))))
          (formal_port_identifier
            (simple_identifier)))
        (checker_port_item
          (property_formal_type1
            (sequence_formal_type1
              (data_type_or_implicit1
                (data_type
                  (simple_identifier)))))
          (formal_port_identifier
            (simple_identifier))))
      (checker_or_generate_item_declaration
        (clocking_declaration
          (clocking_event
            (hierarchical_identifier
              (simple_identifier)))))
      (checker_or_generate_item_declaration
        (property_declaration
          (property_identifier
            (simple_identifier))
          (property_port_list
            (property_port_item
              (property_formal_type1
                (sequence_formal_type1
                  (data_type_or_implicit1
                    (data_type
                      (integer_vector_type)))))
              (formal_port_identifier
                (simple_identifier))))
          (comment)
          (property_spec
            (property_expr
              (sequence_expr
                (sequence_instance
                  (ps_or_hierarchical_sequence_identifier
                    (simple_identifier))))
              (property_expr
                (sequence_expr
                  (sequence_instance
                    (ps_or_hierarchical_sequence_identifier
                      (simple_identifier)))))))))
      (concurrent_assertion_item
        (simple_identifier)
        (assert_property_statement
          (property_spec
            (property_expr
              (sequence_expr
                (expression_or_dist
                  (expression
                    (primary
                      (function_subroutine_call
                        (subroutine_call
                          (tf_call
                            (tf_identifier
                              (simple_identifier))
                            (list_of_arguments
                              (expression
                                (primary
                                  (hierarchical_identifier
                                    (simple_identifier))))))))))))))
          (action_block
            (statement_or_null))))
      (concurrent_assertion_item
        (simple_identifier)
        (cover_property_statement
          (property_spec
            (property_expr
              (sequence_expr
                (sequence_expr
                  (expression_or_dist
                    (expression
                      (unary_operator)
                      (primary
                        (hierarchical_identifier
                          (simple_identifier))))))
                (cycle_delay_range
                  (constant_primary
                    (primary_literal
                      (integral_number
                        (decimal_number
                          (unsigned_number))))))
                (sequence_expr
                  (sequence_instance
                    (ps_or_hierarchical_sequence_identifier
                      (simple_identifier)))))))
          (statement_or_null)))
      (simple_identifier))))
