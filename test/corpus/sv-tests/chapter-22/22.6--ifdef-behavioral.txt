============================================
sv-tests/chapter-22/22.6--ifdef-behavioral
============================================

// Copyright (C) 2019-2021  The SymbiFlow Authors.
//
// Use of this source code is governed by a ISC-style
// license that can be found in the LICENSE file or at
// https://opensource.org/licenses/ISC
//
// SPDX-License-Identifier: ISC


/*
:name: 22.6--ifdef-behavioral
:description: Test
:tags: 22.6
:type: preprocessing
*/
module and_op (a, b, c);
	output a;
	input b, c;
	`ifdef behavioral
		wire a = b & c;
	`else
		and a1 (a,b,c);
	`endif
endmodule

----

(source_file
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (module_declaration
    (module_nonansi_header
      (module_keyword)
      name: (simple_identifier)
      (list_of_ports
        (port
          (simple_identifier))
        (port
          (simple_identifier))
        (port
          (simple_identifier))))
    (port_declaration
      (output_declaration
        (list_of_port_identifiers
          (simple_identifier))))
    (port_declaration
      (input_declaration
        (list_of_port_identifiers
          (simple_identifier)
          (simple_identifier))))
    (conditional_compilation_directive
      (ifdef_or_ifndef)
      (ifdef_condition
        (text_macro_identifier
          (simple_identifier))))
    (module_or_generate_item
      (package_or_generate_item_declaration
        (net_declaration
          (net_type)
          (list_of_net_decl_assignments
            (net_decl_assignment
              (simple_identifier)
              (expression
                (expression
                  (primary
                    (hierarchical_identifier
                      (simple_identifier))))
                (expression
                  (primary
                    (hierarchical_identifier
                      (simple_identifier))))))))))
    (conditional_compilation_directive)
    (module_or_generate_item
      (module_instantiation
        instance_type: (simple_identifier)
        (hierarchical_instance
          (name_of_instance
            instance_name: (instance_identifier
              (simple_identifier)))
          (list_of_port_connections
            (ordered_port_connection
              (expression
                (primary
                  (hierarchical_identifier
                    (simple_identifier)))))
            (ordered_port_connection
              (expression
                (primary
                  (hierarchical_identifier
                    (simple_identifier)))))
            (ordered_port_connection
              (expression
                (primary
                  (hierarchical_identifier
                    (simple_identifier)))))))))
    (conditional_compilation_directive)))
