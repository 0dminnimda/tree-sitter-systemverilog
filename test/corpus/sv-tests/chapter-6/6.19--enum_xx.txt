============================================
sv-tests/chapter-6/6.19--enum_xx
============================================

// Copyright (C) 2019-2021  The SymbiFlow Authors.
//
// Use of this source code is governed by a ISC-style
// license that can be found in the LICENSE file or at
// https://opensource.org/licenses/ISC
//
// SPDX-License-Identifier: ISC


/*
:name: enum_xx
:description: enum with x tests
:tags: 6.19
*/
module top();
	enum integer {a=0, b={32{1'bx}}, c=1} val;
endmodule

----

(source_file
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (module_declaration
    (module_nonansi_header
      (module_keyword)
      name: (simple_identifier)
      (list_of_ports))
    (module_or_generate_item
      (package_or_generate_item_declaration
        (net_declaration
          (simple_identifier)
          (list_of_net_decl_assignments
            (net_decl_assignment
              (simple_identifier)
              (ERROR
                (simple_identifier))
              (expression
                (primary
                  (primary_literal
                    (integral_number
                      (decimal_number
                        (unsigned_number)))))))
            (net_decl_assignment
              (simple_identifier)
              (expression
                (primary
                  (multiple_concatenation
                    (expression
                      (primary
                        (primary_literal
                          (integral_number
                            (decimal_number
                              (unsigned_number))))))
                    (concatenation
                      (expression
                        (primary
                          (primary_literal
                            (integral_number
                              (binary_number))))))))))
            (net_decl_assignment
              (simple_identifier)
              (ERROR
                (expression
                  (primary
                    (primary_literal
                      (integral_number
                        (decimal_number
                          (unsigned_number)))))))
              (expression
                (primary
                  (hierarchical_identifier
                    (simple_identifier)))))))))))

(ERROR)
