============================================
sv-tests/generic/member/class_member_test_32
============================================

// Copyright (C) 2019-2021  The SymbiFlow Authors.
//
// Use of this source code is governed by a ISC-style
// license that can be found in the LICENSE file or at
// https://opensource.org/licenses/ISC
//
// SPDX-License-Identifier: ISC


/*
:name: class_member_test_32
:description: Test
:tags: 8.3
*/
class myclass;
int dout;
int n_bits;

function void shifter;
  for (var int shft_idx=1, bit c=1'b0; shft_idx < n_bits;
       shft_idx++) begin
    dout = {dout} << 1;
  end
endfunction
endclass

module test;
endmodule

----

(source_file
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (package_or_generate_item_declaration
    (class_declaration
      (class_identifier
        (simple_identifier))
      (class_item
        (class_property
          (data_declaration
            (data_type_or_implicit1
              (data_type
                (integer_atom_type)))
            (list_of_variable_decl_assignments
              (variable_decl_assignment
                (simple_identifier))))))
      (class_item
        (class_property
          (data_declaration
            (data_type_or_implicit1
              (data_type
                (integer_atom_type)))
            (list_of_variable_decl_assignments
              (variable_decl_assignment
                (simple_identifier))))))
      (class_item
        (class_method
          (function_declaration
            (function_body_declaration
              (function_data_type_or_implicit1
                (data_type_or_void))
              (function_identifier
                (function_identifier
                  (simple_identifier)))
              (function_statement_or_null
                (function_statement
                  (statement
                    (statement_item
                      (loop_statement
                        (for_initialization
                          (for_variable_declaration
                            (data_type
                              (integer_atom_type))
                            (simple_identifier)
                            (expression
                              (primary
                                (primary_literal
                                  (integral_number
                                    (decimal_number
                                      (unsigned_number))))))
                            (simple_identifier)
                            (ERROR
                              (simple_identifier))
                            (expression
                              (primary
                                (primary_literal
                                  (integral_number
                                    (binary_number)))))))
                        (expression
                          (expression
                            (primary
                              (hierarchical_identifier
                                (simple_identifier))))
                          (expression
                            (primary
                              (hierarchical_identifier
                                (simple_identifier)))))
                        (for_step
                          (inc_or_dec_expression
                            (variable_lvalue
                              (hierarchical_identifier
                                (simple_identifier)))
                            (inc_or_dec_operator)))
                        (statement_or_null
                          (statement
                            (statement_item
                              (seq_block
                                (statement_or_null
                                  (statement
                                    (statement_item
                                      (blocking_assignment
                                        (operator_assignment
                                          (variable_lvalue
                                            (hierarchical_identifier
                                              (simple_identifier)))
                                          (assignment_operator)
                                          (expression
                                            (expression
                                              (primary
                                                (concatenation
                                                  (expression
                                                    (primary
                                                      (hierarchical_identifier
                                                        (simple_identifier)))))))
                                            (expression
                                              (primary
                                                (primary_literal
                                                  (integral_number
                                                    (decimal_number
                                                      (unsigned_number)))))))))))))))))))))))))))
  (module_declaration
    (module_ansi_header
      (module_keyword)
      name: (simple_identifier))))

(ERROR)
