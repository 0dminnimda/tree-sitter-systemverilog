============================================
sv-tests/chapter-7/arrays/associative/other
============================================

// Copyright (C) 2019-2021  The SymbiFlow Authors.
//
// Use of this source code is governed by a ISC-style
// license that can be found in the LICENSE file or at
// https://opensource.org/licenses/ISC
//
// SPDX-License-Identifier: ISC


/*
:name: associative-arrays-other-types
:description: Test associative arrays support
:tags: 7.8.1
:unsynthesizable: 1
*/
module top ();

typedef struct {
    byte B;
    int I[*];
} Unpkt;

int arr [ Unpkt ];

endmodule

----

(source_file
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (module_declaration
    (module_ansi_header
      (module_keyword)
      name: (simple_identifier)
      (list_of_port_declarations))
    (ERROR
      (simple_identifier)
      (simple_identifier))
    (module_or_generate_item
      (package_or_generate_item_declaration
        (data_declaration
          (data_type_or_implicit1
            (data_type
              (integer_atom_type)))
          (list_of_variable_decl_assignments
            (variable_decl_assignment
              (simple_identifier))))))
    (module_or_generate_item
      (package_or_generate_item_declaration
        (data_declaration
          (data_type_or_implicit1
            (data_type
              (integer_atom_type)))
          (list_of_variable_decl_assignments
            (variable_decl_assignment
              (simple_identifier)
              (associative_dimension))))))
    (ERROR
      (simple_identifier))
    (module_or_generate_item
      (package_or_generate_item_declaration))
    (module_or_generate_item
      (package_or_generate_item_declaration
        (data_declaration
          (data_type_or_implicit1
            (data_type
              (integer_atom_type)))
          (list_of_variable_decl_assignments
            (variable_decl_assignment
              (simple_identifier)
              (unpacked_dimension
                (constant_expression
                  (constant_primary
                    (parameter_identifier
                      (simple_identifier))))))))))))

(ERROR)
