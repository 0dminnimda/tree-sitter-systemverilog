============================================
sv-tests/chapter-18/18.12.1--adding-constraints-to-scope-variables_0
============================================

// Copyright (C) 2019-2021  The SymbiFlow Authors.
//
// Use of this source code is governed by a ISC-style
// license that can be found in the LICENSE file or at
// https://opensource.org/licenses/ISC
//
// SPDX-License-Identifier: ISC


/*
:name: adding_constraints_to_scope_variables_0
:description: Adding constraints to scope variablesâ€”std::randomize() with - test
:tags: 18.12.1
*/

class a;
    function int do_randomize(int y);
        int x, success;
        success = std::randomize(x) with {x > 0; x < y;};
        return success;
    endfunction
endclass

----

(source_file
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (package_or_generate_item_declaration
    (class_declaration
      (class_identifier
        (simple_identifier))
      (class_item
        (class_method
          (function_declaration
            (function_body_declaration
              (function_data_type_or_implicit1
                (data_type_or_void
                  (data_type
                    (integer_atom_type))))
              (function_identifier
                (function_identifier
                  (simple_identifier)))
              (tf_port_list
                (tf_port_item1
                  (data_type_or_implicit1
                    (data_type
                      (integer_atom_type)))
                  (port_identifier
                    (simple_identifier))))
              (block_item_declaration
                (data_declaration
                  (data_type_or_implicit1
                    (data_type
                      (integer_atom_type)))
                  (list_of_variable_decl_assignments
                    (variable_decl_assignment
                      (simple_identifier))
                    (variable_decl_assignment
                      (simple_identifier)))))
              (function_statement_or_null
                (function_statement
                  (statement
                    (statement_item
                      (blocking_assignment
                        (operator_assignment
                          (variable_lvalue
                            (hierarchical_identifier
                              (simple_identifier)))
                          (assignment_operator)
                          (expression
                            (expression
                              (primary
                                (function_subroutine_call
                                  (subroutine_call
                                    (randomize_call
                                      (variable_identifier_list
                                        (simple_identifier)))))))
                            (ERROR
                              (simple_identifier))
                            (expression
                              (primary
                                (primary_literal
                                  (integral_number
                                    (decimal_number
                                      (unsigned_number)))))))))))))
              (ERROR
                (simple_identifier))
              (function_statement_or_null
                (function_statement
                  (statement
                    (statement_item
                      (subroutine_call_statement
                        (subroutine_call
                          (tf_call
                            (hierarchical_identifier
                              (simple_identifier)))))))))
              (ERROR)
              (function_statement_or_null)
              (function_statement_or_null
                (function_statement
                  (statement
                    (statement_item
                      (jump_statement
                        (expression
                          (primary
                            (hierarchical_identifier
                              (simple_identifier))))))))))))))))

(ERROR)
