============================================
sv-tests/chapter-18/18.5.6--implication_0
============================================

// Copyright (C) 2019-2021  The SymbiFlow Authors.
//
// Use of this source code is governed by a ISC-style
// license that can be found in the LICENSE file or at
// https://opensource.org/licenses/ISC
//
// SPDX-License-Identifier: ISC


/*
:name: implication_0
:description: implication test
:tags: 18.5.6
*/

class a;
    rand int b1, b2;
    constraint c1 { b1 == 5; }
    constraint c2 { b1 == 5 -> b2 == 10; }
endclass

----

(source_file
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (ERROR
    (simple_identifier)
    (class_item
      (class_property
        (random_qualifier)
        (data_declaration
          (data_type_or_implicit1
            (data_type
              (integer_atom_type)))
          (list_of_variable_decl_assignments
            (variable_decl_assignment
              (simple_identifier))
            (variable_decl_assignment
              (simple_identifier))))))
    (data_type_or_implicit1
      (data_type
        (simple_identifier)))
    (simple_identifier)
    (concatenation
      (expression
        (expression
          (primary
            (hierarchical_identifier
              (simple_identifier))))
        (expression
          (primary
            (primary_literal
              (integral_number
                (decimal_number
                  (unsigned_number)))))))
      (ERROR))
    (port_declaration
      (interface_port_declaration
        (interface_identifier
          (simple_identifier))
        (list_of_interface_identifiers
          (interface_identifier
            (simple_identifier)))))
    (concatenation
      (expression
        (expression
          (expression
            (primary
              (hierarchical_identifier
                (simple_identifier))))
          (expression
            (primary
              (primary_literal
                (integral_number
                  (decimal_number
                    (unsigned_number)))))))
        (expression
          (expression
            (primary
              (hierarchical_identifier
                (simple_identifier))))
          (expression
            (primary
              (primary_literal
                (integral_number
                  (decimal_number
                    (unsigned_number))))))))
      (ERROR))
    (simple_identifier)))

(ERROR)
