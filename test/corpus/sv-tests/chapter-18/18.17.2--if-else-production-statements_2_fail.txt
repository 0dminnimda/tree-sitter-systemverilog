============================================
sv-tests/chapter-18/18.17.2--if-else-production-statements_2_fail
============================================

// Copyright (C) 2019-2021  The SymbiFlow Authors.
//
// Use of this source code is governed by a ISC-style
// license that can be found in the LICENSE file or at
// https://opensource.org/licenses/ISC
//
// SPDX-License-Identifier: ISC


/*
:name: if_else_production_statements_2_fail
:description: randcase if-else test
:should_fail_because: switch variable not declared
:type: elaboration
:tags: 18.17.2
:unsynthesizable: 1
*/

function int F();
    int x;
    randsequence( main )
      main : first;
      first : if(switch) second else third;
      second : { x = 10; };
      third : { x = 5; };
    endsequence
    return x;
endfunction

----

(source_file
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (package_or_generate_item_declaration
    (function_declaration
      (function_body_declaration
        (function_data_type_or_implicit1
          (data_type_or_void
            (data_type
              (integer_atom_type))))
        (function_identifier
          (function_identifier
            (simple_identifier)))
        (block_item_declaration
          (data_declaration
            (data_type_or_implicit1
              (data_type
                (integer_atom_type)))
            (list_of_variable_decl_assignments
              (variable_decl_assignment
                (simple_identifier)))))
        (function_statement_or_null
          (function_statement
            (statement
              (statement_item
                (subroutine_call_statement
                  (subroutine_call
                    (tf_call
                      (hierarchical_identifier
                        (simple_identifier))
                      (list_of_arguments
                        (expression
                          (primary
                            (hierarchical_identifier
                              (simple_identifier))))))))))))
        (function_statement_or_null
          (function_statement
            (statement
              block_name: (simple_identifier)
              (statement_item
                (subroutine_call_statement
                  (subroutine_call
                    (tf_call
                      (hierarchical_identifier
                        (simple_identifier)))))))))
        (function_statement_or_null
          (function_statement
            (statement
              block_name: (simple_identifier)
              (statement_item
                (conditional_statement
                  (cond_predicate
                    (expression
                      (primary
                        (hierarchical_identifier
                          (simple_identifier)))))
                  (statement_or_null
                    (statement
                      (statement_item
                        (subroutine_call_statement
                          (subroutine_call
                            (tf_call
                              (hierarchical_identifier
                                (simple_identifier))))))))
                  (statement_or_null
                    (statement
                      (statement_item
                        (subroutine_call_statement
                          (subroutine_call
                            (tf_call
                              (hierarchical_identifier
                                (simple_identifier)))))))))))))
        (function_statement_or_null
          (function_statement
            (statement
              (statement_item
                (blocking_assignment
                  (operator_assignment
                    (variable_lvalue
                      (hierarchical_identifier
                        (simple_identifier)))
                    (ERROR
                      (simple_identifier))
                    (assignment_operator)
                    (expression
                      (primary
                        (primary_literal
                          (integral_number
                            (decimal_number
                              (unsigned_number))))))))))))
        (ERROR)
        (function_statement_or_null)
        (function_statement_or_null
          (function_statement
            (statement
              block_name: (simple_identifier)
              (ERROR
                (primary
                  (concatenation
                    (expression
                      (primary
                        (hierarchical_identifier
                          (simple_identifier))))
                    (ERROR
                      (unsigned_number))))
                (simple_identifier))
              (statement_item
                (jump_statement
                  (expression
                    (primary
                      (hierarchical_identifier
                        (simple_identifier)))))))))))))

(MISSING ";")
