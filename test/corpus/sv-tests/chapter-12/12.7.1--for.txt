============================================
sv-tests/chapter-12/12.7.1--for
============================================

// Copyright (C) 2019-2021  The SymbiFlow Authors.
//
// Use of this source code is governed by a ISC-style
// license that can be found in the LICENSE file or at
// https://opensource.org/licenses/ISC
//
// SPDX-License-Identifier: ISC


/*
:name: for_loop
:description: A module testing for loop
:tags: 12.7.1
*/
module for_tb ();
	initial begin
		for (int i = 0; i < 256; i++)
			$display("%d", i);
	end
endmodule

----

(source_file
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (module_declaration
    (module_nonansi_header
      (module_keyword)
      name: (simple_identifier)
      (list_of_ports))
    (module_or_generate_item
      (initial_construct
        (statement_or_null
          (statement
            (statement_item
              (seq_block
                (statement_or_null
                  (statement
                    (statement_item
                      (subroutine_call_statement
                        (subroutine_call
                          (tf_call
                            (hierarchical_identifier
                              (simple_identifier))
                            (list_of_arguments
                              (expression
                                (expression
                                  (primary
                                    (hierarchical_identifier
                                      (simple_identifier))))
                                (ERROR
                                  (simple_identifier)
                                  (unsigned_number)
                                  (simple_identifier))
                                (ERROR
                                  (expression
                                    (primary
                                      (primary_literal
                                        (integral_number
                                          (decimal_number
                                            (unsigned_number)))))))
                                (expression
                                  (inc_or_dec_expression
                                    (variable_lvalue
                                      (hierarchical_identifier
                                        (simple_identifier)))
                                    (inc_or_dec_operator)))))))))))
                (statement_or_null
                  (statement
                    (statement_item
                      (subroutine_call_statement
                        (subroutine_call
                          (system_tf_call
                            (system_tf_identifier)
                            (list_of_arguments
                              (expression
                                (primary
                                  (primary_literal
                                    (string_literal))))
                              (expression
                                (primary
                                  (hierarchical_identifier
                                    (simple_identifier)))))))))))))))))))

(ERROR)
