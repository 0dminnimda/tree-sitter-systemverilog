============================================
sv-tests/chapter-16/16.9--sequence-noncons-repetition
============================================

// Copyright (C) 2019-2021  The SymbiFlow Authors.
//
// Use of this source code is governed by a ISC-style
// license that can be found in the LICENSE file or at
// https://opensource.org/licenses/ISC
//
// SPDX-License-Identifier: ISC


/*
:name: sequence_nonconsecutive_repetition_test
:description: sequence with nonconsecutive repetition operator test
:tags: 16.9
:unsynthesizable: 1
*/

module top();

logic clk;
logic a;
logic b;

sequence seq;
    @(posedge clk) b ##1 a [=2:10] ##1 b; //should be equal to: b ##1 a ##1 a ##1 a ##1 b
endsequence

assert property (seq);

endmodule

----

(source_file
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (module_declaration
    (module_ansi_header
      (module_keyword)
      name: (simple_identifier)
      (list_of_port_declarations))
    (module_or_generate_item
      (package_or_generate_item_declaration
        (data_declaration
          (data_type_or_implicit1
            (data_type
              (integer_vector_type)))
          (list_of_variable_decl_assignments
            (variable_decl_assignment
              (simple_identifier))))))
    (module_or_generate_item
      (package_or_generate_item_declaration
        (data_declaration
          (data_type_or_implicit1
            (data_type
              (integer_vector_type)))
          (list_of_variable_decl_assignments
            (variable_decl_assignment
              (simple_identifier))))))
    (module_or_generate_item
      (package_or_generate_item_declaration
        (data_declaration
          (data_type_or_implicit1
            (data_type
              (integer_vector_type)))
          (list_of_variable_decl_assignments
            (variable_decl_assignment
              (simple_identifier))))))
    (module_or_generate_item
      (package_or_generate_item_declaration
        (net_declaration
          (simple_identifier)
          (list_of_net_decl_assignments
            (net_decl_assignment
              (simple_identifier)))))))
  (statement_or_null
    (statement
      (statement_item
        (procedural_timing_control_statement
          (event_control
            (clocking_event
              (event_expression
                (edge_identifier)
                (expression
                  (primary
                    (hierarchical_identifier
                      (simple_identifier)))))))
          (ERROR
            (blocking_assignment
              (operator_assignment
                (variable_lvalue
                  (hierarchical_identifier
                    (simple_identifier)))
                (ERROR
                  (unsigned_number)
                  (simple_identifier))
                (assignment_operator)
                (ERROR
                  (expression
                    (primary
                      (primary_literal
                        (integral_number
                          (decimal_number
                            (unsigned_number)))))))
                (expression
                  (primary
                    (primary_literal
                      (integral_number
                        (decimal_number
                          (unsigned_number)))))))))
          (statement_or_null
            (statement
              (statement_item
                (procedural_timing_control_statement
                  (cycle_delay
                    (integral_number
                      (decimal_number
                        (unsigned_number))))
                  (statement_or_null
                    (statement
                      (statement_item
                        (subroutine_call_statement
                          (subroutine_call
                            (tf_call
                              (hierarchical_identifier
                                (simple_identifier))))))))))))))))
  (comment)
  (package_or_generate_item_declaration
    (net_declaration
      (simple_identifier)
      (list_of_net_decl_assignments
        (net_decl_assignment
          (simple_identifier)))))
  (statement_or_null
    (statement
      (statement_item
        (subroutine_call_statement
          (subroutine_call
            (tf_call
              (hierarchical_identifier
                (simple_identifier))
              (list_of_arguments
                (expression
                  (primary
                    (hierarchical_identifier
                      (simple_identifier)))))))))))
  (ERROR
    (simple_identifier)))

(MISSING "endmodule")
