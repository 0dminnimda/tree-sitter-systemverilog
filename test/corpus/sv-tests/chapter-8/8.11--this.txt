============================================
sv-tests/chapter-8/8.11--this
============================================

// Copyright (C) 2019-2021  The SymbiFlow Authors.
//
// Use of this source code is governed by a ISC-style
// license that can be found in the LICENSE file or at
// https://opensource.org/licenses/ISC
//
// SPDX-License-Identifier: ISC


/*
:name: this
:description: this keyword test
:tags: 8.11
:unsynthesizable: 1
*/
module class_tb ();
	class test_cls;
		int a;
		task test_method(int a);
			$display("test_method");
			this.a += a;
		endtask
	endclass
endmodule

----

(source_file
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (module_declaration
    (module_nonansi_header
      (module_keyword)
      name: (simple_identifier)
      (list_of_ports))
    (module_or_generate_item
      (package_or_generate_item_declaration
        (class_declaration
          (class_identifier
            (simple_identifier))
          (class_item
            (class_property
              (data_declaration
                (data_type_or_implicit1
                  (data_type
                    (integer_atom_type)))
                (list_of_variable_decl_assignments
                  (variable_decl_assignment
                    (simple_identifier))))))
          (class_item
            (class_method
              (task_declaration
                (task_body_declaration
                  (task_identifier
                    (task_identifier
                      (simple_identifier)))
                  (tf_port_list
                    (tf_port_item1
                      (data_type_or_implicit1
                        (data_type
                          (integer_atom_type)))
                      (port_identifier
                        (simple_identifier))))
                  (statement_or_null
                    (statement
                      (statement_item
                        (subroutine_call_statement
                          (subroutine_call
                            (system_tf_call
                              (system_tf_identifier)
                              (list_of_arguments
                                (expression
                                  (primary
                                    (primary_literal
                                      (string_literal)))))))))))
                  (statement_or_null
                    (statement
                      (statement_item
                        (blocking_assignment
                          (operator_assignment
                            (variable_lvalue
                              (implicit_class_handle)
                              (hierarchical_identifier
                                (simple_identifier)))
                            (assignment_operator)
                            (expression
                              (primary
                                (hierarchical_identifier
                                  (simple_identifier))))))))))))))))))
