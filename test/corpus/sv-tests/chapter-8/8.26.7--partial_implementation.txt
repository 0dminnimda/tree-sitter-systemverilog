============================================
sv-tests/chapter-8/8.26.7--partial_implementation
============================================

// Copyright (C) 2019-2021  The SymbiFlow Authors.
//
// Use of this source code is governed by a ISC-style
// license that can be found in the LICENSE file or at
// https://opensource.org/licenses/ISC
//
// SPDX-License-Identifier: ISC


/*
:name: partial_implementation
:description: virtual classes can implement their interfaces partially
:tags: 8.26.7
:unsynthesizable: 1
*/
module class_tb ();
	interface class ihello;
		pure virtual function void hello();
		pure virtual function void world();
	endclass

	virtual class vhello implements ihello;
		virtual function void hello();
			$display("hello");
		endfunction
		pure virtual function void world();
	endclass

	class helloworld extends vhello;
		virtual function void world();
			$display("world");
		endfunction
	endclass

	helloworld obj;

	initial begin
		obj = new;

		obj.hello();
		obj.world();
	end
endmodule

----

(source_file
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (module_declaration
    (module_nonansi_header
      (module_keyword)
      name: (simple_identifier)
      (list_of_ports))
    (module_or_generate_item
      (package_or_generate_item_declaration
        (interface_class_declaration
          (class_identifier
            (simple_identifier))
          (interface_class_item)
          (interface_class_item
            (interface_class_method
              (function_prototype
                (data_type_or_void)
                (function_identifier
                  (function_identifier
                    (simple_identifier))))))
          (interface_class_item
            (interface_class_method
              (function_prototype
                (data_type_or_void)
                (function_identifier
                  (function_identifier
                    (simple_identifier)))))))))
    (module_or_generate_item
      (package_or_generate_item_declaration
        (class_declaration
          (class_identifier
            (simple_identifier))
          (interface_class_type
            (class_identifier
              (simple_identifier)))
          (class_item
            (class_method
              (method_qualifier)
              (function_declaration
                (function_body_declaration
                  (function_data_type_or_implicit1
                    (data_type_or_void))
                  (function_identifier
                    (function_identifier
                      (simple_identifier)))
                  (function_statement_or_null
                    (function_statement
                      (statement
                        (statement_item
                          (subroutine_call_statement
                            (subroutine_call
                              (system_tf_call
                                (system_tf_identifier)
                                (list_of_arguments
                                  (expression
                                    (primary
                                      (primary_literal
                                        (string_literal))))))))))))))))
          (class_item
            (class_method
              (function_prototype
                (data_type_or_void)
                (function_identifier
                  (function_identifier
                    (simple_identifier)))))))))
    (module_or_generate_item
      (package_or_generate_item_declaration
        (class_declaration
          (class_identifier
            (simple_identifier))
          (class_type
            (class_identifier
              (simple_identifier)))
          (class_item
            (class_method
              (method_qualifier)
              (function_declaration
                (function_body_declaration
                  (function_data_type_or_implicit1
                    (data_type_or_void))
                  (function_identifier
                    (function_identifier
                      (simple_identifier)))
                  (function_statement_or_null
                    (function_statement
                      (statement
                        (statement_item
                          (subroutine_call_statement
                            (subroutine_call
                              (system_tf_call
                                (system_tf_identifier)
                                (list_of_arguments
                                  (expression
                                    (primary
                                      (primary_literal
                                        (string_literal)))))))))))))))))))
    (module_or_generate_item
      (package_or_generate_item_declaration
        (data_declaration
          (data_type_or_implicit1
            (data_type
              (simple_identifier)))
          (list_of_variable_decl_assignments
            (variable_decl_assignment
              (simple_identifier))))))
    (module_or_generate_item
      (initial_construct
        (statement_or_null
          (statement
            (statement_item
              (seq_block
                (statement_or_null
                  (statement
                    (statement_item
                      (blocking_assignment
                        (simple_identifier)
                        (class_new)))))
                (statement_or_null
                  (statement
                    (statement_item
                      (subroutine_call_statement
                        (subroutine_call
                          (tf_call
                            (hierarchical_identifier
                              (simple_identifier)
                              (simple_identifier))))))))
                (statement_or_null
                  (statement
                    (statement_item
                      (subroutine_call_statement
                        (subroutine_call
                          (tf_call
                            (hierarchical_identifier
                              (simple_identifier)
                              (simple_identifier))))))))))))))))
