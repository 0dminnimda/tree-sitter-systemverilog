============================================
sv-tests/chapter-8/8.26.3--type_access_extends
============================================

// Copyright (C) 2019-2021  The SymbiFlow Authors.
//
// Use of this source code is governed by a ISC-style
// license that can be found in the LICENSE file or at
// https://opensource.org/licenses/ISC
//
// SPDX-License-Identifier: ISC


/*
:name: type_access_extends
:description: accessing types from extended interface class
:tags: 8.26.3
*/
module class_tb ();
	interface class ihello;
		typedef int int_t;
		pure virtual function void hello(int_t val);
	endclass

	interface class ihello_ex extends ihello;
		pure virtual function void hello_ex(int_t v1, int_t v2);
	endclass
endmodule

----

(source_file
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (module_declaration
    (module_nonansi_header
      (module_keyword)
      name: (simple_identifier)
      (list_of_ports))
    (module_or_generate_item
      (package_or_generate_item_declaration
        (interface_class_declaration
          (class_identifier
            (simple_identifier))
          (interface_class_item)
          (interface_class_item
            (type_declaration
              (data_type_or_incomplete_class_scoped_type
                (data_type
                  (integer_atom_type)))
              (simple_identifier)))
          (interface_class_item
            (interface_class_method
              (function_prototype
                (data_type_or_void)
                (function_identifier
                  (function_identifier
                    (simple_identifier)))
                (tf_port_list
                  (tf_port_item1
                    (data_type_or_implicit1
                      (data_type
                        (simple_identifier)))
                    (port_identifier
                      (simple_identifier))))))))))
    (module_or_generate_item
      (package_or_generate_item_declaration
        (interface_class_declaration
          (class_identifier
            (simple_identifier))
          (interface_class_type
            (class_identifier
              (simple_identifier)))
          (interface_class_item
            (interface_class_method
              (function_prototype
                (data_type_or_void)
                (function_identifier
                  (function_identifier
                    (simple_identifier)))
                (tf_port_list
                  (tf_port_item1
                    (data_type_or_implicit1
                      (data_type
                        (simple_identifier)))
                    (port_identifier
                      (simple_identifier)))
                  (tf_port_item1
                    (data_type_or_implicit1
                      (data_type
                        (simple_identifier)))
                    (port_identifier
                      (simple_identifier))))))))))))
