============================================
sv-tests/chapter-8/8.25.1--parametrized_class_invalid_scope_resolution
============================================

// Copyright (C) 2019-2021  The SymbiFlow Authors.
//
// Use of this source code is governed by a ISC-style
// license that can be found in the LICENSE file or at
// https://opensource.org/licenses/ISC
//
// SPDX-License-Identifier: ISC


/*
:name: parametrized_class_invalid_scope_resolution
:description: parametrized class invalid scope resolution
:should_fail_because: parametrized class invalid scope resolution
:tags: 8.25.1
:type: simulation elaboration
:unsynthesizable: 1
*/
module class_tb ();

	class par_cls #(int a = 25);
		parameter int b = 23;
	endclass

	par_cls #(15) inst;

	initial begin
		inst = new;

		$display(par_cls::b);
	end
endmodule

----

(source_file
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (module_declaration
    (module_ansi_header
      (module_keyword)
      name: (simple_identifier)
      (list_of_port_declarations))
    (module_or_generate_item
      (package_or_generate_item_declaration
        (class_declaration
          (class_identifier
            (simple_identifier))
          (parameter_port_list
            (parameter_port_declaration
              (data_type
                (integer_atom_type))
              (list_of_param_assignments
                (param_assignment
                  (parameter_identifier
                    (simple_identifier))
                  (constant_param_expression
                    (constant_mintypmax_expression
                      (constant_expression
                        (constant_primary
                          (primary_literal
                            (integral_number
                              (decimal_number
                                (unsigned_number))))))))))))
          (class_item
            (parameter_declaration
              (data_type_or_implicit1
                (data_type
                  (integer_atom_type)))
              (list_of_param_assignments
                (param_assignment
                  (parameter_identifier
                    (simple_identifier))
                  (constant_param_expression
                    (constant_mintypmax_expression
                      (constant_expression
                        (constant_primary
                          (primary_literal
                            (integral_number
                              (decimal_number
                                (unsigned_number)))))))))))))))
    (ERROR
      (simple_identifier)
      (parameter_value_assignment
        (list_of_parameter_value_assignments
          (ordered_parameter_assignment
            (_ordered_parameter_assignment
              (mintypmax_expression
                (expression
                  (primary
                    (primary_literal
                      (integral_number
                        (decimal_number
                          (unsigned_number)))))))))))
      (simple_identifier))
    (module_or_generate_item
      (package_or_generate_item_declaration))
    (module_or_generate_item
      (initial_construct
        (statement_or_null
          (statement
            (statement_item
              (seq_block
                (statement_or_null
                  (statement
                    (statement_item
                      (blocking_assignment
                        (operator_assignment
                          (variable_lvalue
                            (hierarchical_identifier
                              (simple_identifier)))
                          (assignment_operator)
                          (expression
                            (primary
                              (hierarchical_identifier
                                (simple_identifier)))))))))
                (statement_or_null
                  (statement
                    (statement_item
                      (subroutine_call_statement
                        (subroutine_call
                          (system_tf_call
                            (system_tf_identifier)
                            (data_type
                              (package_scope
                                (package_identifier
                                  (simple_identifier)))
                              (simple_identifier))))))))))))))))

(ERROR)
