============================================
base/concat - simple concat
============================================
module x;
    always begin
        a <= {1'b0,1'b0};
    end
endmodule

----

    (source_file
      (module_declaration
        (module_ansi_header
          (module_keyword)
          (simple_identifier))
        (module_or_generate_item
          (always_construct
            (always_keyword)
            (statement
              (statement_item
                (seq_block
                  (statement_or_null
                    (statement
                      (statement_item
                        (nonblocking_assignment
                          (variable_lvalue
                            (hierarchical_identifier
                              (simple_identifier)))
                          (expression
                            (primary
                              (concatenation
                                (expression
                                  (primary
                                    (primary_literal
                                      (integral_number
                                        (binary_number)))))
                                (expression
                                  (primary
                                    (primary_literal
                                      (integral_number
                                        (binary_number)))))))))))))))))))

============================================
base/concat - nested concat
============================================
module x;
    always begin
        a <= {b, {1'b0,1'b0}};
    end
endmodule

----

    (source_file
      (module_declaration
        (module_ansi_header
          (module_keyword)
          (simple_identifier))
        (module_or_generate_item
          (always_construct
            (always_keyword)
            (statement
              (statement_item
                (seq_block
                  (statement_or_null
                    (statement
                      (statement_item
                        (nonblocking_assignment
                          (variable_lvalue
                            (hierarchical_identifier
                              (simple_identifier)))
                          (expression
                            (primary
                              (concatenation
                                (expression
                                  (primary
                                    (hierarchical_identifier
                                      (simple_identifier))))
                                (expression
                                  (primary
                                    (concatenation
                                      (expression
                                        (primary
                                          (primary_literal
                                            (integral_number
                                              (binary_number)))))
                                      (expression
                                        (primary
                                          (primary_literal
                                            (integral_number
                                              (binary_number))))))))))))))))))))))

============================================
base/concat - nested empty concat
============================================
module x;
    always begin
        a <= {{1'b0,1'b0}};
    end
endmodule

----

    (source_file
      (module_declaration
        (module_ansi_header
          (module_keyword)
          (simple_identifier))
        (module_or_generate_item
          (always_construct
            (always_keyword)
            (statement
              (statement_item
                (seq_block
                  (statement_or_null
                    (statement
                      (statement_item
                        (nonblocking_assignment
                          (variable_lvalue
                            (hierarchical_identifier
                              (simple_identifier)))
                          (expression
                            (primary
                              (concatenation
                                (expression
                                  (primary
                                    (concatenation
                                      (expression
                                        (primary
                                          (primary_literal
                                            (integral_number
                                              (binary_number)))))
                                      (expression
                                        (primary
                                          (primary_literal
                                            (integral_number
                                              (binary_number))))))))))))))))))))))

============================================
base/concat - nested concat with bit_select
============================================
module x;
    always begin
        a <= {b[1:0], {1'b0,1'b0}};
    end
endmodule

----

    (source_file
      (module_declaration
        (module_ansi_header
          (module_keyword)
          (simple_identifier))
        (module_or_generate_item
          (always_construct
            (always_keyword)
            (statement
              (statement_item
                (seq_block
                  (statement_or_null
                    (statement
                      (statement_item
                        (nonblocking_assignment
                          (variable_lvalue
                            (hierarchical_identifier
                              (simple_identifier)))
                          (expression
                            (primary
                              (concatenation
                                (expression
                                  (primary
                                    (hierarchical_identifier
                                      (simple_identifier))
                                    (select1
                                      (constant_range
                                        (constant_expression
                                          (constant_primary
                                            (primary_literal
                                              (integral_number
                                                (decimal_number
                                                  (unsigned_number))))))
                                        (constant_expression
                                          (constant_primary
                                            (primary_literal
                                              (integral_number
                                                (decimal_number
                                                  (unsigned_number))))))))))
                                (expression
                                  (primary
                                    (concatenation
                                      (expression
                                        (primary
                                          (primary_literal
                                            (integral_number
                                              (binary_number)))))
                                      (expression
                                        (primary
                                          (primary_literal
                                            (integral_number
                                              (binary_number))))))))))))))))))))))

============================================
base/concat - multiple concatenation
============================================
module x;
    always begin
        a <= {5{1'b0}};
    end
endmodule

----

    (source_file
      (module_declaration
        (module_ansi_header
          (module_keyword)
          (simple_identifier))
        (module_or_generate_item
          (always_construct
            (always_keyword)
            (statement
              (statement_item
                (seq_block
                  (statement_or_null
                    (statement
                      (statement_item
                        (nonblocking_assignment
                          (variable_lvalue
                            (hierarchical_identifier
                              (simple_identifier)))
                          (expression
                            (primary
                              (multiple_concatenation
                                (expression
                                  (primary
                                    (primary_literal
                                      (integral_number
                                        (decimal_number
                                          (unsigned_number))))))
                                (concatenation
                                  (expression
                                    (primary
                                      (primary_literal
                                        (integral_number
                                          (binary_number))))))))))))))))))))

============================================
base/concat - multiple concatenation with parenthesis
============================================
module x;
    always begin
        a <= {(5){1'b0}};
    end
endmodule

----

    (source_file
      (module_declaration
        (module_ansi_header
          (module_keyword)
          (simple_identifier))
        (module_or_generate_item
          (always_construct
            (always_keyword)
            (statement
              (statement_item
                (seq_block
                  (statement_or_null
                    (statement
                      (statement_item
                        (nonblocking_assignment
                          (variable_lvalue
                            (hierarchical_identifier
                              (simple_identifier)))
                          (expression
                            (primary
                              (multiple_concatenation
                                (expression
                                  (primary
                                    (mintypmax_expression
                                      (expression
                                        (primary
                                          (primary_literal
                                            (integral_number
                                              (decimal_number
                                                (unsigned_number)))))))))
                                (concatenation
                                  (expression
                                    (primary
                                      (primary_literal
                                        (integral_number
                                          (binary_number))))))))))))))))))))

============================================
base/concat - multiple concatenation with identifier
============================================
module x;
    always begin
        a <= {WIDTH{1'b0}};
    end
endmodule

----

    (source_file
      (module_declaration
        (module_ansi_header
          (module_keyword)
          (simple_identifier))
        (module_or_generate_item
          (always_construct
            (always_keyword)
            (statement
              (statement_item
                (seq_block
                  (statement_or_null
                    (statement
                      (statement_item
                        (nonblocking_assignment
                          (variable_lvalue
                            (hierarchical_identifier
                              (simple_identifier)))
                          (expression
                            (primary
                              (multiple_concatenation
                                (expression
                                  (primary
                                    (hierarchical_identifier
                                      (simple_identifier))))
                                (concatenation
                                  (expression
                                    (primary
                                      (primary_literal
                                        (integral_number
                                          (binary_number))))))))))))))))))))


============================================
base/concat - multiple concatenation with expression
============================================
module x;
    always begin
        a <= {WIDTH*DEPTH{1'b0}};
    end
endmodule

----

    (source_file
      (module_declaration
        (module_ansi_header
          (module_keyword)
          (simple_identifier))
        (module_or_generate_item
          (always_construct
            (always_keyword)
            (statement
              (statement_item
                (seq_block
                  (statement_or_null
                    (statement
                      (statement_item
                        (nonblocking_assignment
                          (variable_lvalue
                            (hierarchical_identifier
                              (simple_identifier)))
                          (expression
                            (primary
                              (multiple_concatenation
                                (expression
                                  (expression
                                    (primary
                                      (hierarchical_identifier
                                        (simple_identifier))))
                                  (expression
                                    (primary
                                      (hierarchical_identifier
                                        (simple_identifier)))))
                                (concatenation
                                  (expression
                                    (primary
                                      (primary_literal
                                        (integral_number
                                          (binary_number))))))))))))))))))))
