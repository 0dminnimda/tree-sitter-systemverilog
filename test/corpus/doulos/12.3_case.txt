============================================
doulos/12.3_case
============================================

// Section 12.3: Case

// Pattern-matching case statement
typedef union tagged {
  void Invalid;
  int  Valid;
} VInt;
/*...*/
VInt v;
/*...*/
case (v) matches
  tagged Invalid  : $display ("v is Invalid");
  tagged Valid .n : $display ("v is Valid with value %d", n);
endcase



----

(source_file
  (comment)
  (comment)
  (package_or_generate_item_declaration
    (data_declaration
      (type_declaration
        (data_type_or_incomplete_class_scoped_type
          (data_type
            (struct_union)
            (struct_union_member
              (data_type_or_void)
              (list_of_variable_decl_assignments
                (variable_decl_assignment
                  (simple_identifier))))
            (struct_union_member
              (data_type_or_void
                (data_type
                  (integer_atom_type)))
              (list_of_variable_decl_assignments
                (variable_decl_assignment
                  (simple_identifier))))))
        (simple_identifier))))
  (comment)
  (package_or_generate_item_declaration
    (data_declaration
      (data_type_or_implicit1
        (data_type
          (simple_identifier)))
      (list_of_variable_decl_assignments
        (variable_decl_assignment
          (simple_identifier)))))
  (comment)
  (statement_or_null
    (statement
      (statement_item
        (case_statement
          (case_keyword)
          (case_expression
            (expression
              (primary
                (hierarchical_identifier
                  (simple_identifier)))))
          (case_pattern_item
            (pattern
              (member_identifier
                (simple_identifier)))
            (statement_or_null
              (statement
                (statement_item
                  (subroutine_call_statement
                    (subroutine_call
                      (system_tf_call
                        (system_tf_identifier)
                        (list_of_arguments
                          (expression
                            (primary
                              (primary_literal
                                (string_literal))))))))))))
          (case_pattern_item
            (pattern
              (member_identifier
                (simple_identifier))
              (pattern
                (simple_identifier)))
            (statement_or_null
              (statement
                (statement_item
                  (subroutine_call_statement
                    (subroutine_call
                      (system_tf_call
                        (system_tf_identifier)
                        (list_of_arguments
                          (expression
                            (primary
                              (primary_literal
                                (string_literal))))
                          (expression
                            (primary
                              (hierarchical_identifier
                                (simple_identifier)))))))))))))))))
