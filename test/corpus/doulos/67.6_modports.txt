============================================
doulos/67.6_modports
============================================

// Section 67.6: Modports

// Clocking blocks and modports
interface An_Interf(input bit clk);
  wire a, b;
  clocking CB @(posedge clk);
    input a;
    output b;
    /*...*/
  endclocking
 
  modport CTB (clocking CB); // Synchronous testbench modport
  modport TB ( input a, output b);  // Asynchronous tb modport
endinterface

module T (An_Interf.CTB T1); // Testbench with synchronous port
  initial begin
    T1.CB.b <= 1;
    /*...*/
  end
endmodule



----

(source_file
  (comment)
  (comment)
  (interface_declaration
    (interface_ansi_header
      name: (interface_identifier
        (simple_identifier))
      (list_of_port_declarations
        (ansi_port_declaration
          (variable_port_header
            (port_direction)
            (data_type
              (integer_vector_type)))
          (port_identifier
            (simple_identifier)))))
    (interface_or_generate_item
      (package_or_generate_item_declaration
        (net_declaration
          (net_type)
          (list_of_net_decl_assignments
            (net_decl_assignment
              (simple_identifier))
            (net_decl_assignment
              (simple_identifier))))))
    (interface_or_generate_item
      (clocking_declaration
        (clocking_identifier
          (clocking_identifier
            (simple_identifier)))
        (clocking_event
          (event_expression
            (edge_identifier)
            (expression
              (primary
                (hierarchical_identifier
                  (simple_identifier))))))
        (clocking_item
          (clocking_direction)
          (list_of_clocking_decl_assign
            (clocking_decl_assign
              (simple_identifier))))
        (clocking_item
          (clocking_direction)
          (list_of_clocking_decl_assign
            (clocking_decl_assign
              (simple_identifier))))
        (comment)))
    (modport_declaration
      (modport_item
        (modport_identifier
          (modport_identifier
            (simple_identifier)))
        (modport_ports_declaration
          (modport_clocking_declaration
            (clocking_identifier
              (clocking_identifier
                (simple_identifier)))))))
    (comment)
    (modport_declaration
      (modport_item
        (modport_identifier
          (modport_identifier
            (simple_identifier)))
        (modport_ports_declaration
          (modport_simple_ports_declaration
            (port_direction)
            (modport_simple_port
              (port_identifier
                (simple_identifier)))))
        (modport_ports_declaration
          (modport_simple_ports_declaration
            (port_direction)
            (modport_simple_port
              (port_identifier
                (simple_identifier)))))))
    (comment))
  (module_declaration
    (module_ansi_header
      (module_keyword)
      name: (simple_identifier)
      (list_of_port_declarations
        (ansi_port_declaration
          (interface_port_header
            (interface_identifier
              (simple_identifier))
            (modport_identifier
              (modport_identifier
                (simple_identifier))))
          (port_identifier
            (simple_identifier)))))
    (comment)
    (module_or_generate_item
      (initial_construct
        (statement_or_null
          (statement
            (statement_item
              (seq_block
                (statement_or_null
                  (statement
                    (statement_item
                      (nonblocking_assignment
                        (variable_lvalue
                          (hierarchical_identifier
                            (simple_identifier)
                            (simple_identifier)
                            (simple_identifier)))
                        (expression
                          (primary
                            (primary_literal
                              (integral_number
                                (decimal_number
                                  (unsigned_number))))))))))
                (comment)))))))))
