============================================
doulos/101.5_task
============================================

// Section 101.5: Task

// Tasks in interfaces
interface A (input logic Clk);
  logic Start;
  /*...*/
  task Task1;
    /*...*/
  endtask: Task1
endinterface: A
module Mod(A Interf);
  /*...*/
always @(Interf.Start)
    Interf.Task1;
endmodule
module DUT;
  logic Clk;
  A Intf(Clk);                  // Interface instantiation
  Mod U1(.Interf(Intf.Task1));  // Only has access to the
                                // Task1 task
  /*...*/
endmodule



----

(source_file
  (comment)
  (comment)
  (interface_declaration
    (interface_ansi_header
      name: (interface_identifier
        (simple_identifier))
      (list_of_port_declarations
        (ansi_port_declaration
          (variable_port_header
            (port_direction)
            (data_type
              (integer_vector_type)))
          (port_identifier
            (simple_identifier)))))
    (interface_or_generate_item
      (package_or_generate_item_declaration
        (data_declaration
          (data_type_or_implicit1
            (data_type
              (integer_vector_type)))
          (list_of_variable_decl_assignments
            (variable_decl_assignment
              (simple_identifier))))))
    (comment)
    (interface_or_generate_item
      (package_or_generate_item_declaration
        (task_declaration
          (task_body_declaration
            (task_identifier
              (task_identifier
                (simple_identifier)))
            (comment)
            (task_identifier
              (task_identifier
                (simple_identifier)))))))
    (interface_identifier
      (simple_identifier)))
  (module_declaration
    (module_ansi_header
      (module_keyword)
      name: (simple_identifier)
      (list_of_port_declarations
        (ansi_port_declaration
          (variable_port_header
            (data_type
              (simple_identifier)))
          (port_identifier
            (simple_identifier)))))
    (comment)
    (module_or_generate_item
      (always_construct
        (always_keyword)
        (statement
          (statement_item
            (procedural_timing_control_statement
              (event_control
                (clocking_event
                  (event_expression
                    (expression
                      (primary
                        (hierarchical_identifier
                          (simple_identifier)
                          (simple_identifier)))))))
              (statement_or_null
                (statement
                  (statement_item
                    (subroutine_call_statement
                      (subroutine_call
                        (tf_call
                          (hierarchical_identifier
                            (simple_identifier)
                            (simple_identifier))))))))))))))
  (module_declaration
    (module_ansi_header
      (module_keyword)
      name: (simple_identifier))
    (module_or_generate_item
      (package_or_generate_item_declaration
        (data_declaration
          (data_type_or_implicit1
            (data_type
              (integer_vector_type)))
          (list_of_variable_decl_assignments
            (variable_decl_assignment
              (simple_identifier))))))
    (module_or_generate_item
      (module_instantiation
        instance_type: (simple_identifier)
        (hierarchical_instance
          (name_of_instance
            instance_name: (instance_identifier
              (simple_identifier)))
          (list_of_port_connections
            (ordered_port_connection
              (expression
                (primary
                  (hierarchical_identifier
                    (simple_identifier)))))))))
    (comment)
    (module_or_generate_item
      (module_instantiation
        instance_type: (simple_identifier)
        (hierarchical_instance
          (name_of_instance
            instance_name: (instance_identifier
              (simple_identifier)))
          (list_of_port_connections
            (named_port_connection
              (port_identifier
                (simple_identifier))
              (expression
                (primary
                  (hierarchical_identifier
                    (simple_identifier)
                    (simple_identifier)))))))))
    (comment)
    (comment)
    (comment)))
