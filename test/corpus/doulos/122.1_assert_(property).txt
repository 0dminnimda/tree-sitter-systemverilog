============================================
doulos/122.1_assert_(property)
============================================

// Section 122.1: Assert (Property)

// Concurrent assertions
module FlipFlop (input logic clk, D, output logic Q);
  property P2;
    int d;
    @(posedge clk) (1,(d=D)) |-> ##1 (Q == d);
  endproperty

  Label2: assert property (P2);

  always @(posedge clk)
    Q <= D;
endmodule



----

(source_file
  (comment)
  (comment)
  (module_declaration
    (module_ansi_header
      (module_keyword)
      name: (simple_identifier)
      (list_of_port_declarations
        (ansi_port_declaration
          (variable_port_header
            (port_direction)
            (data_type
              (integer_vector_type)))
          (port_identifier
            (simple_identifier)))
        (ansi_port_declaration
          (port_identifier
            (simple_identifier)))
        (ansi_port_declaration
          (variable_port_header
            (port_direction)
            (data_type
              (integer_vector_type)))
          (port_identifier
            (simple_identifier)))))
    (module_or_generate_item
      (package_or_generate_item_declaration
        (property_declaration
          (property_identifier
            (simple_identifier))
          (assertion_variable_declaration
            (data_type
              (integer_atom_type))
            (list_of_variable_decl_assignments
              (variable_decl_assignment
                (simple_identifier))))
          (property_spec
            (clocking_event
              (event_expression
                (edge_identifier)
                (expression
                  (primary
                    (hierarchical_identifier
                      (simple_identifier))))))
            (property_expr
              (sequence_expr
                (sequence_expr
                  (expression_or_dist
                    (expression
                      (primary
                        (primary_literal
                          (integral_number
                            (decimal_number
                              (unsigned_number))))))))
                (ERROR
                  (primary
                    (mintypmax_expression
                      (expression
                        (primary
                          (hierarchical_identifier
                            (simple_identifier)))))
                    (ERROR
                      (simple_identifier)))))
              (property_expr
                (sequence_expr
                  (cycle_delay_range
                    (constant_primary
                      (primary_literal
                        (integral_number
                          (decimal_number
                            (unsigned_number))))))
                  (sequence_expr
                    (expression_or_dist
                      (expression
                        (primary
                          (mintypmax_expression
                            (expression
                              (expression
                                (primary
                                  (hierarchical_identifier
                                    (simple_identifier))))
                              (expression
                                (primary
                                  (hierarchical_identifier
                                    (simple_identifier)))))))))))))))))
    (module_or_generate_item
      (concurrent_assertion_item
        (simple_identifier)
        (assert_property_statement
          (property_spec
            (property_expr
              (sequence_expr
                (sequence_instance
                  (ps_or_hierarchical_sequence_identifier
                    (simple_identifier))))))
          (action_block
            (statement_or_null)))))
    (module_or_generate_item
      (always_construct
        (always_keyword)
        (statement
          (statement_item
            (procedural_timing_control_statement
              (event_control
                (clocking_event
                  (event_expression
                    (edge_identifier)
                    (expression
                      (primary
                        (hierarchical_identifier
                          (simple_identifier)))))))
              (statement_or_null
                (statement
                  (statement_item
                    (nonblocking_assignment
                      (variable_lvalue
                        (hierarchical_identifier
                          (simple_identifier)))
                      (expression
                        (primary
                          (hierarchical_identifier
                            (simple_identifier)))))))))))))))

(ERROR)
