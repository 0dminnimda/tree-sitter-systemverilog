============================================
doulos/22.2_covergroup
============================================

// Section 22.2: Covergroup

// Setting options and type options procedurally after instantiating a covergroup 
covergroup CG @(posedge clk);
  CP1 : coverpoint A;
  CP2 : coverpoint B;
endgroup
CG C1 = new;
C1.option.comment = "A comment set for the instance C1";
C1.CP1.option.auto_bin_max = 8;  // Create 8 automatic bins for 
                                 // coverpoint CP1 of instance C1
CG::type_option.comment = "A comment set for C1";
CG::CP1::type_option.weight = 10;



----

(source_file
  (comment)
  (comment)
  (port_declaration
    (interface_port_declaration
      (interface_identifier
        (simple_identifier))
      (list_of_interface_identifiers
        (interface_identifier
          (simple_identifier)))))
  (statement_or_null
    (statement
      (statement_item
        (procedural_timing_control_statement
          (event_control
            (clocking_event
              (event_expression
                (edge_identifier)
                (expression
                  (primary
                    (hierarchical_identifier
                      (simple_identifier)))))))
          (statement_or_null)))))
  (statement_or_null
    (statement
      block_name: (simple_identifier)
      (statement_item
        (subroutine_call_statement
          (subroutine_call
            (tf_call
              (hierarchical_identifier
                (simple_identifier))))
          (ERROR
            (simple_identifier))))))
  (statement_or_null
    (statement
      block_name: (simple_identifier)
      (statement_item
        (subroutine_call_statement
          (subroutine_call
            (tf_call
              (hierarchical_identifier
                (simple_identifier))))
          (ERROR
            (simple_identifier))))))
  (package_or_generate_item_declaration
    (data_declaration
      (data_type_or_implicit1
        (data_type
          (simple_identifier)))
      (ERROR
        (simple_identifier))
      (list_of_variable_decl_assignments
        (variable_decl_assignment
          (simple_identifier)
          (class_new)))))
  (statement_or_null
    (statement
      (statement_item
        (blocking_assignment
          (operator_assignment
            (variable_lvalue
              (hierarchical_identifier
                (simple_identifier)
                (simple_identifier)
                (simple_identifier)))
            (assignment_operator)
            (expression
              (primary
                (primary_literal
                  (string_literal)))))))))
  (statement_or_null
    (statement
      (statement_item
        (blocking_assignment
          (operator_assignment
            (variable_lvalue
              (hierarchical_identifier
                (simple_identifier)
                (simple_identifier)
                (simple_identifier)
                (simple_identifier)))
            (assignment_operator)
            (expression
              (primary
                (primary_literal
                  (integral_number
                    (decimal_number
                      (unsigned_number)))))))))))
  (comment)
  (comment)
  (statement_or_null
    (statement
      (statement_item
        (blocking_assignment
          (operator_assignment
            (variable_lvalue
              (package_scope
                (package_identifier
                  (simple_identifier)))
              (hierarchical_identifier
                (simple_identifier)
                (simple_identifier)))
            (assignment_operator)
            (expression
              (primary
                (primary_literal
                  (string_literal)))))))))
  (statement_or_null
    (statement
      (statement_item
        (subroutine_call_statement
          (subroutine_call
            (method_call
              (class_type
                (class_identifier
                  (simple_identifier))
                (class_identifier
                  (simple_identifier))
                (class_identifier
                  (simple_identifier)))
              (method_call_body
                (method_identifier
                  (method_identifier
                    (simple_identifier))))))
          (ERROR
            (unsigned_number)))))))

(MISSING ";")
