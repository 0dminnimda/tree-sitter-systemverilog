============================================
uvm/1800.2-2020-2.0/src/seq/uvm_sequencer_analysis_fifo.svh
============================================

//----------------------------------------------------------------------
// Copyright 2007-2018 Cadence Design Systems, Inc.
// Copyright 2007-2011 Mentor Graphics Corporation
// Copyright 2020 NVIDIA Corporation
// Copyright 2010 Synopsys, Inc.
//   All Rights Reserved Worldwide
//
//   Licensed under the Apache License, Version 2.0 (the
//   "License"); you may not use this file except in
//   compliance with the License.  You may obtain a copy of
//   the License at
//
//       http://www.apache.org/licenses/LICENSE-2.0
//
//   Unless required by applicable law or agreed to in
//   writing, software distributed under the License is
//   distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
//   CONDITIONS OF ANY KIND, either express or implied.  See
//   the License for the specific language governing
//   permissions and limitations under the License.
//----------------------------------------------------------------------


class uvm_sequencer_analysis_fifo #(type RSP = uvm_sequence_item) extends uvm_tlm_fifo #(RSP);

  uvm_analysis_imp #(RSP, uvm_sequencer_analysis_fifo #(RSP)) analysis_export;
  uvm_sequencer_base sequencer_ptr;

  function new (string name, uvm_component parent = null);
    super.new(name, parent, 0);
    analysis_export = new ("analysis_export", this);
  endfunction

  function void write(input RSP t);
    if (sequencer_ptr == null)
      uvm_report_fatal ("SEQRNULL", "The sequencer pointer is null when attempting a write", UVM_NONE);
    sequencer_ptr.analysis_write(t);
  endfunction // void
endclass

----

(source_file
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (package_or_generate_item_declaration
    (class_declaration
      (class_identifier
        (simple_identifier))
      (parameter_port_list
        (parameter_port_declaration
          (list_of_type_assignments
            (type_assignment
              (simple_identifier)
              (data_type
                (simple_identifier))))))
      (class_type
        (class_identifier
          (simple_identifier))
        (parameter_value_assignment
          (list_of_parameter_value_assignments
            (ordered_parameter_assignment
              (param_expression
                (mintypmax_expression
                  (expression
                    (primary
                      (hierarchical_identifier
                        (simple_identifier))))))))))
      (class_item
        (class_property
          (data_declaration
            (data_type_or_implicit1
              (data_type
                (class_type
                  (class_identifier
                    (simple_identifier))
                  (parameter_value_assignment
                    (list_of_parameter_value_assignments
                      (ordered_parameter_assignment
                        (param_expression
                          (mintypmax_expression
                            (expression
                              (primary
                                (hierarchical_identifier
                                  (simple_identifier)))))))
                      (ordered_parameter_assignment
                        (param_expression
                          (data_type
                            (class_type
                              (class_identifier
                                (simple_identifier))
                              (parameter_value_assignment
                                (list_of_parameter_value_assignments
                                  (ordered_parameter_assignment
                                    (param_expression
                                      (mintypmax_expression
                                        (expression
                                          (primary
                                            (hierarchical_identifier
                                              (simple_identifier))))))))))))))))))
            (list_of_variable_decl_assignments
              (variable_decl_assignment
                (simple_identifier))))))
      (class_item
        (class_property
          (data_declaration
            (data_type_or_implicit1
              (data_type
                (simple_identifier)))
            (list_of_variable_decl_assignments
              (variable_decl_assignment
                (simple_identifier))))))
      (class_item
        (class_method
          (class_constructor_declaration
            (class_constructor_arg_list
              (class_constructor_arg
                (tf_port_item1
                  (data_type_or_implicit1
                    (data_type))
                  (port_identifier
                    (simple_identifier))))
              (class_constructor_arg
                (tf_port_item1
                  (data_type_or_implicit1
                    (data_type
                      (simple_identifier)))
                  (port_identifier
                    (simple_identifier))
                  (expression
                    (primary)))))
            (list_of_arguments
              (expression
                (primary
                  (hierarchical_identifier
                    (simple_identifier))))
              (expression
                (primary
                  (hierarchical_identifier
                    (simple_identifier))))
              (expression
                (primary
                  (primary_literal
                    (integral_number
                      (decimal_number
                        (unsigned_number)))))))
            (function_statement_or_null
              (function_statement
                (statement
                  (statement_item
                    (blocking_assignment
                      (simple_identifier)
                      (class_new
                        (list_of_arguments
                          (expression
                            (primary
                              (primary_literal
                                (string_literal))))
                          (expression
                            (primary))))))))))))
      (class_item
        (class_method
          (function_declaration
            (function_body_declaration
              (function_data_type_or_implicit1
                (data_type_or_void))
              (function_identifier
                (function_identifier
                  (simple_identifier)))
              (tf_port_list
                (tf_port_item1
                  (tf_port_direction
                    (port_direction))
                  (data_type_or_implicit1
                    (data_type
                      (simple_identifier)))
                  (port_identifier
                    (simple_identifier))))
              (function_statement_or_null
                (function_statement
                  (statement
                    (statement_item
                      (conditional_statement
                        (cond_predicate
                          (expression
                            (expression
                              (primary
                                (hierarchical_identifier
                                  (simple_identifier))))
                            (expression
                              (primary))))
                        (statement_or_null
                          (statement
                            (statement_item
                              (subroutine_call_statement
                                (subroutine_call
                                  (tf_call
                                    (hierarchical_identifier
                                      (simple_identifier))
                                    (list_of_arguments
                                      (expression
                                        (primary
                                          (primary_literal
                                            (string_literal))))
                                      (expression
                                        (primary
                                          (primary_literal
                                            (string_literal))))
                                      (expression
                                        (primary
                                          (hierarchical_identifier
                                            (simple_identifier))))))))))))))))
              (function_statement_or_null
                (function_statement
                  (statement
                    (statement_item
                      (subroutine_call_statement
                        (subroutine_call
                          (tf_call
                            (hierarchical_identifier
                              (simple_identifier)
                              (simple_identifier))
                            (list_of_arguments
                              (expression
                                (primary
                                  (hierarchical_identifier
                                    (simple_identifier))))))))))))))))
      (comment))))
