============================================
uvm/1800.2-2020-2.0/compat/uvm_compat_pkg
============================================

//
//----------------------------------------------------------------------
// Copyright 2010 AMD
// Copyright 2010-2023 Cadence Design Systems, Inc.
// Copyright 2022 Marvell International Ltd.
// Copyright 2010-2011 Mentor Graphics Corporation
// Copyright 2013-2022 NVIDIA Corporation
// Copyright 2010-2011 Synopsys, Inc.
//
//   All Rights Reserved Worldwide
//
//   Licensed under the Apache License, Version 2.0 (the
//   "License"); you may not use this file except in
//   compliance with the License.  You may obtain a copy of
//   the License at
//
//       http://www.apache.org/licenses/LICENSE-2.0
//
//   Unless required by applicable law or agreed to in
//   writing, software distributed under the License is
//   distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
//   CONDITIONS OF ANY KIND, either express or implied.  See
//   the License for the specific language governing
//   permissions and limitations under the License.
//----------------------------------------------------------------------
`ifndef UVM_COMPAT_PKG_SV
`define UVM_COMPAT_PKG_SV

`include "uvm_macros.svh"
`include "uvm_compat_macros.svh"

package uvm_compat_pkg;

  import uvm_pkg::*;

`include "uvm_compat_packer.svh"
`include "uvm_compat_proxy_sequence.svh"
  
  
endpackage

`endif

----

(source_file
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (conditional_compilation_directive
    (ifdef_or_ifndef)
    (ifdef_condition
      (text_macro_identifier
        (simple_identifier))))
  (text_macro_definition
    (text_macro_name
      (text_macro_identifier
        (simple_identifier))))
  (include_compiler_directive
    (double_quoted_string))
  (include_compiler_directive
    (double_quoted_string))
  (package_or_generate_item_declaration
    (data_declaration
      (data_type_or_implicit1
        (data_type
          (simple_identifier)))
      (list_of_variable_decl_assignments
        (variable_decl_assignment
          (simple_identifier)))))
  (package_or_generate_item_declaration
    (net_declaration
      (simple_identifier)
      (list_of_net_decl_assignments
        (net_decl_assignment
          (simple_identifier)))
      (ERROR)))
  (include_compiler_directive
    (double_quoted_string))
  (include_compiler_directive
    (double_quoted_string))
  (ERROR
    (simple_identifier))
  (conditional_compilation_directive))

(ERROR)
