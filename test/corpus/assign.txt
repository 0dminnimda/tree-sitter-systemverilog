============================================
base/assign - constant decimal
============================================

module mod ();
  assign a = 5;
endmodule

----

    (source_file
      (module_declaration
        (module_nonansi_header
          (module_keyword)
          (simple_identifier)
          (list_of_ports))
        (module_or_generate_item
          (continuous_assign
            (list_of_net_assignments
              (net_assignment
                (net_lvalue
                  (ps_or_hierarchical_net_identifier
                    (simple_identifier)))
                (expression
                  (primary
                    (primary_literal
                      (integral_number
                        (decimal_number
                          (unsigned_number))))))))))))

============================================
base/assign - constant '0
============================================

module mod ();
  assign a = '0;
endmodule

----

    (source_file
      (module_declaration
        (module_nonansi_header
          (module_keyword)
          (simple_identifier)
          (list_of_ports))
        (module_or_generate_item
          (continuous_assign
            (list_of_net_assignments
              (net_assignment
                (net_lvalue
                  (ps_or_hierarchical_net_identifier
                    (simple_identifier)))
                (expression
                  (primary
                    (primary_literal
                      (unbased_unsized_literal))))))))))

============================================
base/assign - constants: bin oct dec hex
============================================

module mod ();

  assign quz = 16'habc;
  assign bar = 6'o42;
  assign foo = 7'b010_1000;
  assign baz = 12'd987654;

endmodule

----

    (source_file
      (module_declaration
        (module_nonansi_header
          (module_keyword)
          (simple_identifier)
          (list_of_ports))
        (module_or_generate_item
          (continuous_assign
            (list_of_net_assignments
              (net_assignment
                (net_lvalue
                  (ps_or_hierarchical_net_identifier
                    (simple_identifier)))
                (expression
                  (primary
                    (primary_literal
                      (integral_number
                        (hex_number)))))))))
        (module_or_generate_item
          (continuous_assign
            (list_of_net_assignments
              (net_assignment
                (net_lvalue
                  (ps_or_hierarchical_net_identifier
                    (simple_identifier)))
                (expression
                  (primary
                    (primary_literal
                      (integral_number
                        (octal_number)))))))))
        (module_or_generate_item
          (continuous_assign
            (list_of_net_assignments
              (net_assignment
                (net_lvalue
                  (ps_or_hierarchical_net_identifier
                    (simple_identifier)))
                (expression
                  (primary
                    (primary_literal
                      (integral_number
                        (binary_number)))))))))
        (module_or_generate_item
          (continuous_assign
            (list_of_net_assignments
              (net_assignment
                (net_lvalue
                  (ps_or_hierarchical_net_identifier
                    (simple_identifier)))
                (expression
                  (primary
                    (primary_literal
                      (integral_number
                        (decimal_number)))))))))))

============================================
base/assign - net
============================================

module mod ();
  assign a = b;
endmodule

----

    (source_file
      (module_declaration
        (module_nonansi_header
          (module_keyword)
          (simple_identifier)
          (list_of_ports))
        (module_or_generate_item
          (continuous_assign
            (list_of_net_assignments
              (net_assignment
                (net_lvalue
                  (ps_or_hierarchical_net_identifier
                    (simple_identifier)))
                (expression
                  (primary
                    (hierarchical_identifier
                      (simple_identifier))))))))))

============================================
base/assign - binary_operator
============================================

module mod ();
  assign a = b & c;
endmodule

----

    (source_file
      (module_declaration
        (module_nonansi_header
          (module_keyword)
          (simple_identifier)
          (list_of_ports))
        (module_or_generate_item
          (continuous_assign
            (list_of_net_assignments
              (net_assignment
                (net_lvalue
                  (ps_or_hierarchical_net_identifier
                    (simple_identifier)))
                (expression
                  (expression
                    (primary
                      (hierarchical_identifier
                        (simple_identifier))))
                  (expression
                    (primary
                      (hierarchical_identifier
                        (simple_identifier)))))))))))


============================================
base/assign - unary_operator
============================================

module mod ();
  assign a = ~|c;
endmodule

----

    (source_file
      (module_declaration
        (module_nonansi_header
          (module_keyword)
          (simple_identifier)
          (list_of_ports))
        (module_or_generate_item
          (continuous_assign
            (list_of_net_assignments
              (net_assignment
                (net_lvalue
                  (ps_or_hierarchical_net_identifier
                    (simple_identifier)))
                (expression
                  (unary_operator)
                  (primary
                    (hierarchical_identifier
                      (simple_identifier))))))))))

============================================
base/assign - parenthesized expression
============================================

module mod ();
  assign a = (
    b + c)
      | &(b
        & 5 );
endmodule

----

    (source_file
      (module_declaration
        (module_nonansi_header
          (module_keyword)
          (simple_identifier)
          (list_of_ports))
        (module_or_generate_item
          (continuous_assign
            (list_of_net_assignments
              (net_assignment
                (net_lvalue
                  (ps_or_hierarchical_net_identifier
                    (simple_identifier)))
                (expression
                  (expression
                    (primary
                      (mintypmax_expression
                        (expression
                          (expression
                            (primary
                              (hierarchical_identifier
                                (simple_identifier))))
                          (expression
                            (primary
                              (hierarchical_identifier
                                (simple_identifier))))))))
                  (expression
                    (unary_operator)
                    (primary
                      (mintypmax_expression
                        (expression
                          (expression
                            (primary
                              (hierarchical_identifier
                                (simple_identifier))))
                          (expression
                            (primary
                              (primary_literal
                                (integral_number
                                  (decimal_number
                                    (unsigned_number)))))))))))))))))

============================================
base/assign - concatenation LHS
============================================

module mod ();
  assign {a, b} = foo;
endmodule

----

    (source_file
      (module_declaration
        (module_nonansi_header
          (module_keyword)
          (simple_identifier)
          (list_of_ports))
        (module_or_generate_item
          (continuous_assign
            (list_of_net_assignments
              (net_assignment
                (net_lvalue
                  (net_lvalue
                    (ps_or_hierarchical_net_identifier
                      (simple_identifier)))
                  (net_lvalue
                    (ps_or_hierarchical_net_identifier
                      (simple_identifier))))
                (expression
                  (primary
                    (hierarchical_identifier
                      (simple_identifier))))))))))

============================================
base/assign - concatenation RHS
============================================

module mod ();
  assign a = {b,c , d };
endmodule

----

    (source_file
      (module_declaration
        (module_nonansi_header
          (module_keyword)
          (simple_identifier)
          (list_of_ports))
        (module_or_generate_item
          (continuous_assign
            (list_of_net_assignments
              (net_assignment
                (net_lvalue
                  (ps_or_hierarchical_net_identifier
                    (simple_identifier)))
                (expression
                  (primary
                    (concatenation
                      (expression
                        (primary
                          (hierarchical_identifier
                            (simple_identifier))))
                      (expression
                        (primary
                          (hierarchical_identifier
                            (simple_identifier))))
                      (expression
                        (primary
                          (hierarchical_identifier
                            (simple_identifier)))))))))))))

============================================
base/assign - bit_select
============================================

module mod ();
  assign a = b[1];
endmodule

----

    (source_file
      (module_declaration
        (module_nonansi_header
          (module_keyword)
          (simple_identifier)
          (list_of_ports))
        (module_or_generate_item
          (continuous_assign
            (list_of_net_assignments
              (net_assignment
                (net_lvalue
                  (ps_or_hierarchical_net_identifier
                    (simple_identifier)))
                (expression
                  (primary
                    (hierarchical_identifier
                      (simple_identifier))
                    (select1
                      (bit_select1
                        (expression
                          (primary
                            (primary_literal
                              (integral_number
                                (decimal_number
                                  (unsigned_number))))))))))))))))

============================================
base/assign - constant_range
============================================

module mod ();
  assign a = b[3:1];
endmodule

----

    (source_file
      (module_declaration
        (module_nonansi_header
          (module_keyword)
          (simple_identifier)
          (list_of_ports))
        (module_or_generate_item
          (continuous_assign
            (list_of_net_assignments
              (net_assignment
                (net_lvalue
                  (ps_or_hierarchical_net_identifier
                    (simple_identifier)))
                (expression
                  (primary
                    (hierarchical_identifier
                      (simple_identifier))
                    (select1
                      (constant_range
                        (constant_expression
                          (constant_primary
                            (primary_literal
                              (integral_number
                                (decimal_number
                                  (unsigned_number))))))
                        (constant_expression
                          (constant_primary
                            (primary_literal
                              (integral_number
                                (decimal_number
                                  (unsigned_number))))))))))))))))

============================================
base/assign - constant_range expression
============================================

module mod ();
  assign a = b[1+Param:0];
endmodule

----

    (source_file
      (module_declaration
        (module_nonansi_header
          (module_keyword)
          (simple_identifier)
          (list_of_ports))
        (module_or_generate_item
          (continuous_assign
            (list_of_net_assignments
              (net_assignment
                (net_lvalue
                  (ps_or_hierarchical_net_identifier
                    (simple_identifier)))
                (expression
                  (primary
                    (hierarchical_identifier
                      (simple_identifier))
                    (select1
                      (constant_range
                        (constant_expression
                          (constant_expression
                            (constant_primary
                              (primary_literal
                                (integral_number
                                  (decimal_number
                                    (unsigned_number))))))
                          (constant_expression
                            (constant_primary
                              (parameter_identifier
                                (simple_identifier)))))
                        (constant_expression
                          (constant_primary
                            (primary_literal
                              (integral_number
                                (decimal_number
                                  (unsigned_number))))))))))))))))

============================================
base/assign - constant_range expression (parameter first)
============================================

module mod ();
  assign a = b[Param+1:0];
endmodule

----

    (source_file
      (module_declaration
        (module_nonansi_header
          (module_keyword)
          (simple_identifier)
          (list_of_ports))
        (module_or_generate_item
          (continuous_assign
            (list_of_net_assignments
              (net_assignment
                (net_lvalue
                  (ps_or_hierarchical_net_identifier
                    (simple_identifier)))
                (expression
                  (primary
                    (hierarchical_identifier
                      (simple_identifier))
                    (select1
                      (constant_range
                        (constant_expression
                          (constant_expression
                            (constant_primary
                              (parameter_identifier
                                (simple_identifier))))
                          (constant_expression
                            (constant_primary
                              (primary_literal
                                (integral_number
                                  (decimal_number
                                    (unsigned_number)))))))
                        (constant_expression
                          (constant_primary
                            (primary_literal
                              (integral_number
                                (decimal_number
                                  (unsigned_number))))))))))))))))

============================================
base/assign - constant_range expression (parameter first, LSB)
============================================

module mod ();
  assign a = b[0:Param+1];
endmodule

----

    (source_file
      (module_declaration
        (module_nonansi_header
          (module_keyword)
          (simple_identifier)
          (list_of_ports))
        (module_or_generate_item
          (continuous_assign
            (list_of_net_assignments
              (net_assignment
                (net_lvalue
                  (ps_or_hierarchical_net_identifier
                    (simple_identifier)))
                (expression
                  (primary
                    (hierarchical_identifier
                      (simple_identifier))
                    (select1
                      (constant_range
                        (constant_expression
                          (constant_primary
                            (primary_literal
                              (integral_number
                                (decimal_number
                                  (unsigned_number))))))
                        (constant_expression
                          (constant_expression
                            (constant_primary
                              (parameter_identifier
                                (simple_identifier))))
                          (constant_expression
                            (constant_primary
                              (primary_literal
                                (integral_number
                                  (decimal_number
                                    (unsigned_number)))))))))))))))))


============================================
base/assign - precedence or, xor, and, eq
============================================

module mod ();
  assign z = a | b ^ c & |d == e;
endmodule

----

    (source_file
      (module_declaration
        (module_nonansi_header
          (module_keyword)
          (simple_identifier)
          (list_of_ports))
        (module_or_generate_item
          (continuous_assign
            (list_of_net_assignments
              (net_assignment
                (net_lvalue
                  (ps_or_hierarchical_net_identifier
                    (simple_identifier)))
                (expression
                  (expression
                    (primary
                      (hierarchical_identifier
                        (simple_identifier))))
                  (expression
                    (expression
                      (primary
                        (hierarchical_identifier
                          (simple_identifier))))
                    (expression
                      (expression
                        (primary
                          (hierarchical_identifier
                            (simple_identifier))))
                      (expression
                        (expression
                          (unary_operator)
                          (primary
                            (hierarchical_identifier
                              (simple_identifier))))
                        (expression
                          (primary
                            (hierarchical_identifier
                              (simple_identifier))))))))))))))

============================================
base/assign - conditional_expression
============================================

module mod ();
  assign a = b == c ? d : e;
endmodule

----

    (source_file
      (module_declaration
        (module_nonansi_header
          (module_keyword)
          (simple_identifier)
          (list_of_ports))
        (module_or_generate_item
          (continuous_assign
            (list_of_net_assignments
              (net_assignment
                (net_lvalue
                  (ps_or_hierarchical_net_identifier
                    (simple_identifier)))
                (expression
                  (conditional_expression
                    (cond_predicate
                      (expression
                        (expression
                          (primary
                            (hierarchical_identifier
                              (simple_identifier))))
                        (expression
                          (primary
                            (hierarchical_identifier
                              (simple_identifier))))))
                    (expression
                      (primary
                        (hierarchical_identifier
                          (simple_identifier))))
                    (expression
                      (primary
                        (hierarchical_identifier
                          (simple_identifier))))))))))))


============================================
base/assign - nested conditional_expression 1
============================================

module mod ();
  assign a = b == c ? d : e == f ? g : h == i ? j : k;
endmodule

----

    (source_file
      (module_declaration
        (module_nonansi_header
          (module_keyword)
          (simple_identifier)
          (list_of_ports))
        (module_or_generate_item
          (continuous_assign
            (list_of_net_assignments
              (net_assignment
                (net_lvalue
                  (ps_or_hierarchical_net_identifier
                    (simple_identifier)))
                (expression
                  (conditional_expression
                    (cond_predicate
                      (expression
                        (conditional_expression
                          (cond_predicate
                            (expression
                              (conditional_expression
                                (cond_predicate
                                  (expression
                                    (expression
                                      (primary
                                        (hierarchical_identifier
                                          (simple_identifier))))
                                    (expression
                                      (primary
                                        (hierarchical_identifier
                                          (simple_identifier))))))
                                (expression
                                  (primary
                                    (hierarchical_identifier
                                      (simple_identifier))))
                                (expression
                                  (expression
                                    (primary
                                      (hierarchical_identifier
                                        (simple_identifier))))
                                  (expression
                                    (primary
                                      (hierarchical_identifier
                                        (simple_identifier))))))))
                          (expression
                            (primary
                              (hierarchical_identifier
                                (simple_identifier))))
                          (expression
                            (expression
                              (primary
                                (hierarchical_identifier
                                  (simple_identifier))))
                            (expression
                              (primary
                                (hierarchical_identifier
                                  (simple_identifier))))))))
                    (expression
                      (primary
                        (hierarchical_identifier
                          (simple_identifier))))
                    (expression
                      (primary
                        (hierarchical_identifier
                          (simple_identifier))))))))))))

============================================
base/assign - nested conditional_expression 2
============================================

module mod ();
  assign a = b == c ? d == e ? f == g ? h : i : j : k;
endmodule

----

    (source_file
      (module_declaration
        (module_nonansi_header
          (module_keyword)
          (simple_identifier)
          (list_of_ports))
        (module_or_generate_item
          (continuous_assign
            (list_of_net_assignments
              (net_assignment
                (net_lvalue
                  (ps_or_hierarchical_net_identifier
                    (simple_identifier)))
                (expression
                  (conditional_expression
                    (cond_predicate
                      (expression
                        (expression
                          (primary
                            (hierarchical_identifier
                              (simple_identifier))))
                        (expression
                          (primary
                            (hierarchical_identifier
                              (simple_identifier))))))
                    (expression
                      (conditional_expression
                        (cond_predicate
                          (expression
                            (expression
                              (primary
                                (hierarchical_identifier
                                  (simple_identifier))))
                            (expression
                              (primary
                                (hierarchical_identifier
                                  (simple_identifier))))))
                        (expression
                          (conditional_expression
                            (cond_predicate
                              (expression
                                (expression
                                  (primary
                                    (hierarchical_identifier
                                      (simple_identifier))))
                                (expression
                                  (primary
                                    (hierarchical_identifier
                                      (simple_identifier))))))
                            (expression
                              (primary
                                (hierarchical_identifier
                                  (simple_identifier))))
                            (expression
                              (primary
                                (hierarchical_identifier
                                  (simple_identifier))))))
                        (expression
                          (primary
                            (hierarchical_identifier
                              (simple_identifier))))))
                    (expression
                      (primary
                        (hierarchical_identifier
                          (simple_identifier))))))))))))


============================================
base/assign - nested parenthesized conditional_expression 1
============================================

module mod ();
  assign a = (b == c) ? d : (e == f) ? g : (h == i) ? j : k;
endmodule

----

    (source_file
      (module_declaration
        (module_nonansi_header
          (module_keyword)
          (simple_identifier)
          (list_of_ports))
        (module_or_generate_item
          (continuous_assign
            (list_of_net_assignments
              (net_assignment
                (net_lvalue
                  (ps_or_hierarchical_net_identifier
                    (simple_identifier)))
                (expression
                  (conditional_expression
                    (cond_predicate
                      (expression
                        (conditional_expression
                          (cond_predicate
                            (expression
                              (conditional_expression
                                (cond_predicate
                                  (expression
                                    (primary
                                      (mintypmax_expression
                                        (expression
                                          (expression
                                            (primary
                                              (hierarchical_identifier
                                                (simple_identifier))))
                                          (expression
                                            (primary
                                              (hierarchical_identifier
                                                (simple_identifier)))))))))
                                (expression
                                  (primary
                                    (hierarchical_identifier
                                      (simple_identifier))))
                                (expression
                                  (primary
                                    (mintypmax_expression
                                      (expression
                                        (expression
                                          (primary
                                            (hierarchical_identifier
                                              (simple_identifier))))
                                        (expression
                                          (primary
                                            (hierarchical_identifier
                                              (simple_identifier)))))))))))
                          (expression
                            (primary
                              (hierarchical_identifier
                                (simple_identifier))))
                          (expression
                            (primary
                              (mintypmax_expression
                                (expression
                                  (expression
                                    (primary
                                      (hierarchical_identifier
                                        (simple_identifier))))
                                  (expression
                                    (primary
                                      (hierarchical_identifier
                                        (simple_identifier)))))))))))
                    (expression
                      (primary
                        (hierarchical_identifier
                          (simple_identifier))))
                    (expression
                      (primary
                        (hierarchical_identifier
                          (simple_identifier))))))))))))

============================================
base/assign - nested parenthesized conditional_expression 2
============================================

module mod ();
  assign a = (b == c) ? (d == e) ? (f == g) ? h : i : j : k;
endmodule

----

    (source_file
      (module_declaration
        (module_nonansi_header
          (module_keyword)
          (simple_identifier)
          (list_of_ports))
        (module_or_generate_item
          (continuous_assign
            (list_of_net_assignments
              (net_assignment
                (net_lvalue
                  (ps_or_hierarchical_net_identifier
                    (simple_identifier)))
                (expression
                  (conditional_expression
                    (cond_predicate
                      (expression
                        (primary
                          (mintypmax_expression
                            (expression
                              (expression
                                (primary
                                  (hierarchical_identifier
                                    (simple_identifier))))
                              (expression
                                (primary
                                  (hierarchical_identifier
                                    (simple_identifier)))))))))
                    (expression
                      (conditional_expression
                        (cond_predicate
                          (expression
                            (primary
                              (mintypmax_expression
                                (expression
                                  (expression
                                    (primary
                                      (hierarchical_identifier
                                        (simple_identifier))))
                                  (expression
                                    (primary
                                      (hierarchical_identifier
                                        (simple_identifier)))))))))
                        (expression
                          (conditional_expression
                            (cond_predicate
                              (expression
                                (primary
                                  (mintypmax_expression
                                    (expression
                                      (expression
                                        (primary
                                          (hierarchical_identifier
                                            (simple_identifier))))
                                      (expression
                                        (primary
                                          (hierarchical_identifier
                                            (simple_identifier)))))))))
                            (expression
                              (primary
                                (hierarchical_identifier
                                  (simple_identifier))))
                            (expression
                              (primary
                                (hierarchical_identifier
                                  (simple_identifier))))))
                        (expression
                          (primary
                            (hierarchical_identifier
                              (simple_identifier))))))
                    (expression
                      (primary
                        (hierarchical_identifier
                          (simple_identifier))))))))))))
